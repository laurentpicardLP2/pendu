{"ast":null,"code":"var _jsxFileName = \"/home/laurent/react/pendu/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotations: [\"Rien ne sert de courir, il faut partir à point\", \"La raison du plus fort est toujours la meilleure\", \"La douleur est toujours moins forte que la plainte\", \"En toute chose, il faut considérer la fin\", \"On hasarde de perdre en voulant trop gagner\"]\n    };\n  } // Produit une représentation textuelle de l’état de la partie,\n  // chaque lettre non découverte étant représentée par un _underscore_.\n  // (CSS assurera de l’espacement entre les lettres pour mieux\n  // visualiser le tout).\n\n\n  computeDisplay(phrase, usedLetters) {\n    return phrase.replace(/\\w/g, letter => usedLetters.has(letter) ? letter : '_');\n  }\n\n  render() {\n    this.state.quotations.map((quotation, index) => console.log(index + \" : \" + quotation));\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.state.quotations[0]), React.createElement(\"a\", {\n      className: \"App-link\",\n      href: \"https://reactjs.org\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Learn React\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/laurent/react/pendu/src/App.js"],"names":["React","App","Component","constructor","props","state","quotations","computeDisplay","phrase","usedLetters","replace","letter","has","render","map","quotation","index","console","log","logo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;;AAKA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,CACV,gDADU,EAEV,kDAFU,EAGV,oDAHU,EAIV,2CAJU,EAKV,6CALU;AADD,KAAb;AASD,GAZ+B,CAehC;AACF;AACA;AACA;;;AACAC,EAAAA,cAAc,CAACC,MAAD,EAASC,WAAT,EAAsB;AAClC,WAAOD,MAAM,CAACE,OAAP,CAAe,KAAf,EACJC,MAAD,IAAaF,WAAW,CAACG,GAAZ,CAAgBD,MAAhB,IAA0BA,MAA1B,GAAmC,GAD3C,CAAP;AAGD;;AAECE,EAAAA,MAAM,GAAE;AACN,SAAKR,KAAL,CAAWC,UAAX,CAAsBQ,GAAtB,CAA0B,CAACC,SAAD,EAAYC,KAAZ,KAAsBC,OAAO,CAACC,GAAR,CAAYF,KAAK,GAAG,KAAR,GAAgBD,SAA5B,CAAhD;AACA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEI,IAAV;AAAgB,MAAA,SAAS,EAAC,UAA1B;AAAqC,MAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKd,KAAL,CAAWC,UAAX,CAAsB,CAAtB,CADH,CAFF,EAKE;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,IAAI,EAAC,qBAFP;AAGE,MAAA,MAAM,EAAC,QAHT;AAIE,MAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALF,CADF,CADF;AAkBD;;AA7C+B;;AAgDlC,eAAeL,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      quotations: [\n        \"Rien ne sert de courir, il faut partir à point\",\n        \"La raison du plus fort est toujours la meilleure\",\n        \"La douleur est toujours moins forte que la plainte\",\n        \"En toute chose, il faut considérer la fin\",\n        \"On hasarde de perdre en voulant trop gagner\"\n      ]\n    };\n  }\n\n\n  // Produit une représentation textuelle de l’état de la partie,\n// chaque lettre non découverte étant représentée par un _underscore_.\n// (CSS assurera de l’espacement entre les lettres pour mieux\n// visualiser le tout).\ncomputeDisplay(phrase, usedLetters) {\n  return phrase.replace(/\\w/g,\n    (letter) => (usedLetters.has(letter) ? letter : '_')\n  )\n}\n\n  render(){\n    this.state.quotations.map((quotation, index) => console.log(index + \" : \" + quotation));\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            {this.state.quotations[0]}\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}